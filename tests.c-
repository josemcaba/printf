/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   tests.c                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jocaball <jocaball@student.42malaga.com    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/04/27 08:30:55 by jocaball          #+#    #+#             */
/*   Updated: 2023/05/05 00:49:03 by jocaball         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ft_printf.h"
#include <stdio.h>
#include <limits.h>

// #define INT_MIN	0x80000000
// #define INT_MAX 0x7fffffff

void	ft_leaks(void)
{
	system("leaks -q a.exe");
}

void	test_d (char *format, int nbr)
{
	printf(" : %d\n", printf(format, nbr));
	printf(" : %d\n", ft_printf(format, nbr));
}

void	test_h (char *format, unsigned int nbr)
{
	printf(" : %d\n", printf(format, nbr));
	printf(" : %d\n", ft_printf(format, nbr));
}

void	test_p (char *format, void *ptr)
{
	printf(" : %d\n", printf(format, ptr));
	printf(" : %d\n", ft_printf(format, ptr));
}

void	test_u (char *format, unsigned int nbr)
{
	printf(" : %d\n", printf(format, nbr));
	printf(" : %d\n", ft_printf(format, nbr));
}

void	test_w (char *format)
{
	printf(" : %d\n", printf(format));
	printf(" : %d\n", ft_printf(format));
}

int	main(void)
{
	//ptr = "42Malaga";
	atexit(ft_leaks);
// 	test_d("%d", 1523589012);
// 	test_d("%d", -354316);
// 	test_d("%-7d", 1234);
// 	test_d("%-2d", 1254);
// 	test_d("%07d", 1264);
// 	test_d("%03d", 1235);
// 	test_d("%.7d", 1236);
// 	test_d("%.2d", 1237);
// 	test_d("%7d", 1238);
// 	test_d("%2d", 1239);
// 	test_d("% 10d", 1241);
// 	test_d("%+10d", 1242);
// 	test_d("%.5d", 2);
// 	test_d("%.3d", 0);
// 	test_d("%8.5d", 35);
// 	test_d("%8.5d", 0);
// 	test_d("%8.3d", 8375);
// 	test_d("%-8.5d", 34);
// 	test_d("%3.7d", 3267);
// 	test_d("%-8.5d", 0);
// 	test_d("%-8.3d", 8376);
// 	test_d("%-3.7d", 3268);
// 	test_d("%08.5d", 34);
// 	test_d("%08.5d", 0);
// 	test_d("%-1d", 0);
// 	test_d("%-3d", 1);
// 	test_d("%.0d", 0);
// 	test_d("%.d", 0);
// 	test_d("%5.0d", 0);
// 	test_d("%5.d", 0);

// 	test_u("%u", -10);
// 	test_u(" %u ", 0);
// 	test_u("%8.5u", 35);

// 	test_w("%5%");
// 	test_w("%-5%");
// 	test_w("%-05%");
// 	test_w("%-05%hola");

// ft_printf("\nNEGATIVOS\n\n");

// 	test_d("%.6d", -3);
// 	test_d("%07d", -54);
// 	test_d("%10.5d", -216);
// 	test_d("%3.7d", -2375);
// 	test_d("%-10.5d", -216);
// 	test_d("%-3.7d", -2375);
// 	test_d("%010.5d", -216);
// 	test_d("%03.7d", -2375);
// 	test_d("%10.2d", -2375);

ft_printf("\nHEXADECIMALES\n\n");

	test_h("%x", 0);
	test_h("%X", 0);
	test_h("%x", 0x0);
	test_h("%X", 0x0);
	test_h("%x", 0x41AF5C);
	test_h("%X", 0x41af5c);
	test_h("%x", 0xffffffff);
	test_h("%X", 0xffffffff);

ft_printf("\nBonus 2 (Hexa)\n\n");

	ft_printf("\n\"#\"\n");

	test_h("%#x", 0);
	test_h("%#X", 0);
	test_h("%#x", 0x41AF5C);
	test_h("%#X", 0x41af5c);
	test_h("%#x", 0xffffffff);
	test_h("%#X", 0xffffffff);

	ft_printf("\n\" \"\n");

	test_h("% x", 0);
	test_h("% X", 0);
	test_h("% x", 0x41AF5C);
	test_h("% X", 0x41af5c);
	test_h("% x", 0xffffffff);
	test_h("% X", 0xffffffff);

	ft_printf("\n\"+\"\n");

	test_h("%+x", 0);
	test_h("%+X", 0);
	test_h("%+x", 0x41AF5C);
	test_h("%+X", 0x41af5c);
	test_h("%+x", 0xffffffff);
	test_h("%+X", 0xffffffff);

	ft_printf("\n\"# Width\"\n");

	test_h("%#1x", 0);
	test_h("%#5X", 0);
	test_h("%#3x", 0x41AF5C);
	test_h("%#20X", 0x41af5c);
	test_h("%#3x", 0xffffffff);
	test_h("%#20X", 0xffffffff);

	ft_printf("\n\"  Width\"\n");

	test_h("% 1x", 0);
	test_h("% 5X", 0);
	test_h("% 3x", 0x41AF5C);
	test_h("% 20X", 0x41af5c);
	test_h("% 3x", 0xffffffff);
	test_h("% 20X", 0xffffffff);

	ft_printf("\n\"+ Width\"\n");

	test_h("%+1x", 0);
	test_h("%+5X", 0);
	test_h("%+3x", 0x41AF5C);
	test_h("%+20X", 0x41af5c);
	test_h("%+3x", 0xffffffff);
	test_h("%+20X", 0xffffffff);

ft_printf("\nBonus 1 (Hexa)\n\n");

 	ft_printf("\n\"-\"\n");
	test_h("%-0x", 0);
	test_h("%-5X", 0);
	test_h("%-3x", 0x41AF5C);
	test_h("%-20X", 0x41af5c);
	test_h("%-3x", 0xffffffff);
	test_h("%-20X", 0xffffffff);

 	ft_printf("\n\"#-\"\n");
	test_h("%#-0x", 0);
	test_h("%#-5X", 0);
	test_h("%#-3x", 0x41AF5C);
	test_h("%#-20X", 0x41af5c);
	test_h("%#-3x", 0xffffffff);
	test_h("%#-20X", 0xffffffff);


ft_printf("\nBonus 1 (Hexa)\n\n");

 	ft_printf("\n\"0\"\n");
	test_h("%0x", 0);
	test_h("%05X", 0);
	test_h("%03x", 0x41AF5C);
	test_h("%020X", 0x41af5c);
	test_h("%03x", 0xffffffff);
	test_h("%020X", 0xffffffff);

 	ft_printf("\n\"#0\"\n");
	test_h("%#00x", 0);
	test_h("%#05X", 0);
	test_h("%#03x", 0x41AF5C);
	test_h("%#020X", 0x41af5c);
	test_h("%#03x", 0xffffffff);
	test_h("%#020X", 0xffffffff);

 	ft_printf("\n\".\"\n");
	test_h("%.x", 0);
	test_h("%.5X", 0);
	test_h("%.3x", 0x41AF5C);
	test_h("%.20X", 0x41af5c);
	test_h("%.3x", 0xffffffff);
	test_h("%.20X", 0xffffffff);

 	ft_printf("\n\"#.\"\n");
	test_h("%#.0x", 0);
	test_h("%#.5X", 0);
	test_h("%#.3x", 0x41AF5C);
	test_h("%#.20X", 0x41af5c);
	test_h("%#.3x", 0xffffffff);
	test_h("%#.20X", 0xffffffff);

 	test_h("%#-x", 0);
 	test_h("%#-X", 0);
	test_h("%#-x", 0x0);
 	test_h("%#-X", 0x0);
 	test_h("%#-x", 0x41AF5C);
 	test_h("%#-X", 0x41af5c);
 	test_h("%#-x", 0xffffffff);
 	test_h("%#-X", 0xffffffff);

	test_h("%x", 1234);
	test_h("%-7X", 1235);
	test_h("%-2x", 1236);
	test_h("%07X", 0xdef);
	test_h("%02x", 1238);
	test_h("%.7X", 1239);
	test_h("%.2x", 1240);
	test_h("%7X", 1241);
	test_h("%2x", 1242);
	test_h("%#X", 0xabc);
	test_h("%#x", 1244);
	test_h("%#-7X", 1245);
	test_h("%#-2x", 1246);
	test_h("%#012X", 0x8001);
	test_h("%#02x", 1248);
	test_h("%#.7X", 1249);
	test_h("%#.2x", 1250);
	test_h("%#7X", 0x789);
	test_h("%#2x", 1252);
	test_h("%#15.8x", 0x1234);
	test_h("%#015x", 0x1235);
	test_h("%#15.8x", 0x1236);
	test_h("%#3.8x", 0x1237);
	test_h("%#03.8x", 0x1238);
	test_h("%.0x", 0x7890);
	
	test_p("%p", "");


	return (0);
}

